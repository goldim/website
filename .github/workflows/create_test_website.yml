name: Build a Pull Request version of the website and deploy to subdir
on: pull_request

jobs:
  build-and-deploy-pr:
    runs-on: ubuntu-18.04
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - uses: chrnorm/deployment-action@releases/v1
        name: Create PR Version of the website
        id: deployment
        with:
          token: "${{ github.token }}"
          target_url: http://my-app-url.com
          environment: production

      - name: Build
        run: |
          PR_NO=$(echo $GITHUB_REF | awk 'BEGIN { FS = "/" } ; { print $3 }')
          SUBDIR="PR_${PR_NO}"
          npm i
          npx gulp
          mv html $SUBDIR
          git clone https://github.com/qooxdoo/website.git --depth=1 --branch=gh-pages  ./html
          rm -rf ./html/.git
          mv $SUBDIR ./html/

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./html

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: http://my-app-url.com
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: http://my-app-url.com
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
